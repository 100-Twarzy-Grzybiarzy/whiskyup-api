openapi: 3.0.3
info:
  title: Whisky Up API
  version: 1.0.0
paths:
  /whisky:
    get:
      summary: Get whiskies
      parameters:
        - name: sort
          in: query
          required: false
          schema:
            type: string
            default: 'name'
        - name: order
          in: query
          required: false
          schema:
            type: string
            default: 'desc'
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 50
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WhiskiesFindResult'
    post:
      summary: Add whisky
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Whisky'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whisky'
components:
  schemas:
    WhiskiesFindResult:
      type: object
      properties:
        startElement:
          type: integer
          format: int64
        totalCount:
          type: integer
          format: int64
        counts:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: "#/components/schemas/Whisky"
    Whisky:
      type: object
      required:
        - name
        - rating
        - userRating
        - amountOfRatings
        - price
      properties:
        id:
          type: integer
          format: int32
        creationDate:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
        imageUrl:
          type: string
        rating:
          type: number
          format: double
        userRating:
          type: number
          format: double
        amountOfRatings:
          type: integer
          format: int32
        price:
          type: number
          format: double